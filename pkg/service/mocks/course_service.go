// Code generated by MockGen. DO NOT EDIT.
// Source: course_service.go

// Package servicemocks is a generated GoMock package.
package servicemocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	service "github.com/jdpx/mind-hub-api/pkg/service"
	reflect "reflect"
)

// MockCourseServicer is a mock of CourseServicer interface
type MockCourseServicer struct {
	ctrl     *gomock.Controller
	recorder *MockCourseServicerMockRecorder
}

// MockCourseServicerMockRecorder is the mock recorder for MockCourseServicer
type MockCourseServicerMockRecorder struct {
	mock *MockCourseServicer
}

// NewMockCourseServicer creates a new mock instance
func NewMockCourseServicer(ctrl *gomock.Controller) *MockCourseServicer {
	mock := &MockCourseServicer{ctrl: ctrl}
	mock.recorder = &MockCourseServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCourseServicer) EXPECT() *MockCourseServicerMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockCourseServicer) GetAll(ctx context.Context) ([]*service.Course, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*service.Course)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockCourseServicerMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockCourseServicer)(nil).GetAll), ctx)
}

// GetByID mocks base method
func (m *MockCourseServicer) GetByID(ctx context.Context, id string) (*service.Course, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*service.Course)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockCourseServicerMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockCourseServicer)(nil).GetByID), ctx, id)
}
