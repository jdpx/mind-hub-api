// Code generated by MockGen. DO NOT EDIT.
// Source: step_note_service.go

// Package servicemocks is a generated GoMock package.
package servicemocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	service "github.com/jdpx/mind-hub-api/pkg/service"
	reflect "reflect"
)

// MockStepNoteServicer is a mock of StepNoteServicer interface
type MockStepNoteServicer struct {
	ctrl     *gomock.Controller
	recorder *MockStepNoteServicerMockRecorder
}

// MockStepNoteServicerMockRecorder is the mock recorder for MockStepNoteServicer
type MockStepNoteServicerMockRecorder struct {
	mock *MockStepNoteServicer
}

// NewMockStepNoteServicer creates a new mock instance
func NewMockStepNoteServicer(ctrl *gomock.Controller) *MockStepNoteServicer {
	mock := &MockStepNoteServicer{ctrl: ctrl}
	mock.recorder = &MockStepNoteServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStepNoteServicer) EXPECT() *MockStepNoteServicerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockStepNoteServicer) Get(ctx context.Context, sID, uID string) (*service.StepNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, sID, uID)
	ret0, _ := ret[0].(*service.StepNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockStepNoteServicerMockRecorder) Get(ctx, sID, uID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStepNoteServicer)(nil).Get), ctx, sID, uID)
}

// Update mocks base method
func (m *MockStepNoteServicer) Update(ctx context.Context, sID, uID, value string) (*service.StepNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, sID, uID, value)
	ret0, _ := ret[0].(*service.StepNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockStepNoteServicerMockRecorder) Update(ctx, sID, uID, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockStepNoteServicer)(nil).Update), ctx, sID, uID, value)
}
