# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Course {
  id: ID!
  title: String!
  description: String!
  sessionCount: Int!
  stepCount: Int!

  sessions: [Session]!

  note: CourseNote
  progress: CourseProgress
}

type Session {
  id: ID!
  title: String!
  description: String!

  steps: [Step]
  course: Course!
  # progress: SessionProgress
}

type Step {
  id: ID!
  title: String!
  description: String!
  type: String!
  videoUrl: String
  audioUrl: String
  question: String

  session: Session!
  note: StepNote
  progress: StepProgress
}

type CourseProgress {
  id: ID!
  state: String!
  completedSteps: Int!
  dateStarted: String!
}

# type SessionProgress {
#   id: ID!
#   dateStarted: String!
# }

type StepProgress {
  id: ID!
  state: String!
  dateStarted: String!
  dateCompleted: String!
}

input CourseQuery {
  id: ID!
}

input SessionQuery {
  id: ID!
}

input StepQuery {
  id: ID!
}

type CourseNote {
  id: ID!
  courseID: ID!
  userID: ID!
  value: String
}

type StepNote {
  id: ID!
  stepID: ID!
  userID: ID!
  value: String
}

type Query {
  courses: [Course!]!

  course(where: CourseQuery!): Course
  session(where: SessionQuery!): Session
}

input CourseStarted {
  courseID: ID!
}

input StepCompleted {
  id: ID!
}

input StepStarted {
  id: ID!
}

input UpdatedCourseNote {
  id: ID
  courseID: ID!
  value: String!
}

input UpdatedStepNote {
  id: ID
  stepID: ID!
  value: String!
}

type Mutation {
  courseStarted(input: CourseStarted!): Course!
  updateCourseNote(input: UpdatedCourseNote!): Course!

  stepStarted(input: StepStarted!): Step!
  stepCompleted(input: StepCompleted!): Step!
  updateStepNote(input: UpdatedStepNote!): Step!
}
